[?] = sounds cool, but outside of project scope. Don't get carried away ;)

BACKLOG
=======
- [ ] optimise text rendering (good candidate: texture atlass technique)
    - [ ] use alpha blended text textures - shouldn't be heavy if well optimised
- [ ] implement the second paddle
- [ ] implement last player hit tracking on ball (probs pass ID)
- [ ] colour modulation
- [ ] implement second ball for the second player.
- [ ] change round loss condition to no balls left, to support multiple balls
- [ ] players start with ball glued to paddle, release with button or time
- [?] more colours for bricks (via colour modulation most likely)
- [?] make more levels
- [?] bricks with more health, harder to destroy bricks
- [?] animated bricks
- [?] drops

TODO - cofogo
=============
- [x] create a worktime log for the project
- [x] implement paddle movement
- [x] create the paddle graphic
- [x] implement the brick array
- [x] implement the ball(s)
- [x] rectangular collision handling
- [x] implement ball recoil angle dependancy on paddle impact location distance from paddle centre
    - [x] ball speed calculations based on angle (maybe base on x offset rather that angle?)
    - [x] the actual collision detection and handling
    - [x] BUG - fix the unexpected behaviour on collision with paddle
- [x] texture memory alloc/free
- [x] rendering handling
- [x] rectangular collision handling
- [x] player livecount
- [x] game over/won event
- [x] system/wrapper for printing text onto the screen
- [x] scoring system
- [x] remove redundant text printing operations
- [x] gui text
    - [x] player live count
    - [x] score
    - [x] game won/over
    - [x] toggleable fps indicator
- [x] use alpha channeel when loading gfx assets
- [x] remake gfx assets to use new alpha functionality
- [x] impelement fps rate limit (60fps)
- [x] find a way to display fps without hogging a lot of compute time
- [x] 02-21 improve game over screen with animations, wait for input to q
- [x] 02-28 improve collisions with a trajectory intercept mechanism
- [x] 03-01 add error handling when opening fonts (e.g. open fornts from Text_Object)
- [x] 03-01 move text_to_texture to Text_Object
- [x] 03-02 respawn bricks when all are gone
- [x] 03-09 implement a scoreboard (overlay on the game over animation :))
- [x] 03-11 collision engine - review, move into a separate module
- [x] 03-14 collision engine - untangle collision detection from colission reaction
- [x] 03-24 collision engine - generalise collision detection more by returning data
- [x] 03-26 collision engine - move collisions to new framework and test
- [x] 03-27 collision engine - solve issue: when colission should happen very close to another brick, sometimes wrong brick is returned by collision detection
- [ ] 03-29 collision engine - multiple collisions per frame

TODO - luke1222
===============
- [ ] allign the brick array to centre of scene
- [ ] stop paddle from moving outside the edges of the scene
